'''Scripts to check the dataset generated by the TentMapExpRunner class.

'''

import numpy as np
from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

import sys
sys.path.append('../')

from data_generators import time_delay_embedding

from cdriver.datagen.tent_map import TentMapExpRunner
from tqdm import tqdm
# import data configuration variables
from data_config import N, n, aint, A0


datasets, params = zip(
    *[TentMapExpRunner(nvars=3, baseA=A0, a_interval=aint).gen_experiment(n=n, seed=i) for i in tqdm(range(N))])
print(params)
print(len(params))

for i in range(N):
    d_embed=2
    Z = time_delay_embedding(datasets[i][:, 0], dimension=d_embed)
    X = time_delay_embedding(datasets[i][:, 1], dimension=d_embed)
    Y = time_delay_embedding(datasets[i][:, 2], dimension=d_embed)

    plt.figure(figsize=(10, 10))
    if d_embed == 3:
        ax1 = plt.subplot(131, projection='3d')
        ax2 = plt.subplot(132, projection='3d')
        ax3 = plt.subplot(133, projection='3d')
    else:
        ax1 = plt.subplot(131)
        ax2 = plt.subplot(132)
        ax3 = plt.subplot(133)
    ds = 10
    ax1.scatter(*Z[::ds].T, c=Z[::ds, 0])
    ax2.scatter(*X[::ds].T, c=Z[::ds, 0])
    ax3.scatter(*Y[::ds].T, c=Z[::ds, 0])

    plt.savefig('./datacheck_plots/tentmap{}.png'.format(i))
    plt.close()
# plt.show()
